const path = require('path');

// Export a function. Accept the base config as the only param.
module.exports = async ({ config, mode }) => {
  config.module.rules.push ({
      test: /\.js[x]?$/,
      include: path.resolve(__dirname, '../stories'),
      loader: "babel-loader",
  })
  config.module.rules.push({
    test: /\.scss$/,
    include:path.resolve(__dirname, '../stories'),
    use: [{
      loader: "css-loader",
      options: {
          modules: true,
          sourceMap: true
      }
  }, 'sass-loader'],
  })
  config.module.rules.push({
    test: /\.less$/,
    include: path.resolve(__dirname, '../stories'),
    use: [
      'style-loader',
      { loader: 'css-loader',options: {
        modules: true,
        sourceMap: true
      } },
      'less-loader',
      { loader: 'less-loader', options: { javascriptEnabled: true } }
    ]
  })
  config.module.rules.push({
    test: /\.css$/,
    include: path.resolve(__dirname, '../stories'),
    use: [
      'style-loader',
      { loader: 'css-loader', options: {
        modules: true,
        sourceMap: true
    } },

    ]
  })
  // Return the altered config
  return config
}
// const path = require('path');
// const webpack = require('webpack');

// // 路径别名
// const alias = {};

// module.exports = {
//   mode: 'production',
//   module: {
//     rules: [
      
//     ]
//   },

//   plugins: [
//     new webpack.ContextReplacementPlugin(/moment[/\\]locale$/, /zh-cn|en-gb/),
//   ],

//   // 解析模块
//   resolve: {
//     alias,
//     // 自动解析确定的扩展
//     extensions: ['.mjs', '.js', '.jsx'],
//   },
// }